Average # of computations = 11088

4) 	Recurrence relation :
	base case: T(0) = 0 , T(1) = 0
	C(n) = [sum (m = 1 to n) (n-1 + C(m-1) + C(n-m))]/n

5)	Average Case of Quicksort will run in theta(nlogn), since the runtime of quicksort is only proportional to the number of comparisons
	the runtime is also in theta(C(n))

	Worst Case will run in theta(n^2):
	Take recurrence relation:
			T(0) = c, T(1) = c 
			T(n) = n-1 + T(n-1)
	this reduces to:
			=  kn - sum (i = 1 to k) i + T(n-k), now pick k = n-1
			=  (n-1)n - (n-1)(n-2)/2 + c
			=  n^2/2 + b, we don't care what b is, only look at highest order term
			ie T(n) is in theta(n^2)
	
	Worst case is unlikely since it requires that in every iteration we
	pick the smallest or largest value in the array to be the pivot and
	the pivot is chosen randomly.

	Quick sort is an in-order sort because no additional data structure is used to sort the input array.
	Quick sort is not stable because the records with the same key are not guaranteed to appear in the same order
	in the sorted list as in the original list.

	Consider array: 5(1) 3 4 9 5(2) 5(3)
	Pivot = 5(1)
	4 3 5(1) 9 5(3) 5(2)
	Need to sort 9 5(3) 5(2)
	Pivot = 5(3)
	5(3) 9 5(2)
	Need to sort 9 5(2)
	End with 5(3) 5(2) 9
